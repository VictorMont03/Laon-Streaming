import Header from "../../components/ui/Header";
import Head from "next/head";
import Link from "next/link";

import { useState, useEffect } from "react";

//components
import Footer from "../../components/ui/Footer";
import api from "../../services/api";

export async function getServerSideProps() {
  const response = await api.get("/movie");
  const categories = await api.get("/movie-categories");

  return {
    props: {
      movies: response.data,
      categories: categories.data,
    },
  };
}

export default function Movies({ movies, categories }) {
  const [moviesList, setMoviesList] = useState(movies);
  const [selectedCategory, setSelectedCategory] = useState(null);

  console.log(categories);

  useEffect(() => {
    console.log(selectedCategory);
    if (selectedCategory != null) {
      async function handleMoviesByCategory(category_id) {
        await api.get(`/${category_id}/movie`).then((response) => {
          setMoviesList(response.data);
        });
      }
      handleMoviesByCategory(selectedCategory.id);
    } else {
      async function handleAllMovies() {
        await api.get(`/movie`).then((response) => {
          setMoviesList(response.data);
        });
      }
      handleAllMovies();
    }
  }, [selectedCategory]);
  return (
    <main className="tw-bg-darkPurple tw-h-[100vh] tw-w-full tw-relative">
      <Head>
        <title>Laon Productions - Movies</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <section className="tw-mt-[50px]">
        <nav className="tw-w-full tw-px-[5%]">
          <button
            id={selectedCategory == null ? "-category-active" : "-category"}
            onClick={() => setSelectedCategory(null)}
            className="tw-border-[1px] tw-mr-[30px] tw-border-lightPink tw-text-lightPink tw-w-[130px] tw-rounded-[20px] tw-h-[40px]"
          >
            Todos
          </button>
          {categories.map((category, i) => (
            <button
              key={i}
              id={
                selectedCategory != null && selectedCategory.id == category.id
                  ? "-category-active"
                  : "-category"
              }
              onClick={() => setSelectedCategory(category)}
              className="tw-border-[1px] tw-mr-[30px] tw-border-lightPink tw-text-lightPink tw-w-[130px] tw-rounded-[20px] tw-h-[40px]"
            >
              {category.title}
            </button>
          ))}
        </nav>
        <div className="tw-w-full tw-px-[5%]">
          <h1 className="tw-text-white tw-mt-[50px] tw-text-[30px]">
            {selectedCategory == null ? "Todos" : selectedCategory.title}
          </h1>
          <div className="tw-flex tw-flex-wrap tw-mt-[30px]">
            {moviesList.map((movie, i) => (
              <Link href={`/movies/${movie.slug}`} id="movie-card" key={i}>
                <img
                  src={!!movie.cover_image && movie.cover_image}
                  className="tw-w-[180px] tw-h-[264px] tw-object-cover tw-mr-[20px]"
                />
              </Link>
            ))}
          </div>
        </div>
      </section>
      <Footer />
    </main>
  );
}
