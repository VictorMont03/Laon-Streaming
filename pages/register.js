import Head from "next/head";

//Components
import LoginHeader from "../components/ui/LoginHeader";
import { Input } from "../components/forms/Input";
import { Button } from "../components/forms/Button";

//auth context
import { useAuth } from "../context/auth";

//Form logic
import { useForm } from "react-hook-form";

//yup
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";

// Form schema
const schema = yup
  .object({
    email: yup.string().required("Campo email é obrigatório"),
    name: yup.string().required("Campo nome é obrigatório"),
    password: yup.string().required("Campo senha é obrigatório"),
  })
  .required();

export default function Register() {
  //Form declarations
  const {
    register,
    formState: { errors },
    handleSubmit,
  } = useForm({ resolver: yupResolver(schema) });

  const { signUp } = useAuth();

  const onSubmit = async ({ email, password, name }) => {
    try {
      signUp({ email, password, name });
    } catch (e) {
      console.log(e);
    }
  };

  return (
    <main className="tw-bg-darkPurple tw-h-[100vh]">
      <Head>
        <title>Laon Productions - Cadastro</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LoginHeader />
      <section className="tw-w-full tw-flex tw-justify-center tw-items-center tw-h-[90vh]">
        <form
          onSubmit={handleSubmit(onSubmit)}
          autocomplete="off"
          className="tw-bg-mediumPurple tw-w-[50%] tw-px-[10%] tw-py-[50px] tw-rounded-[20px]"
        >
          <h1 className="tw-text-white tw-text-[24px]">Cadastre-se</h1>
          <p className="tw-text-lightPink tw-mb-[30px]">
            Acompanhe os melhores filmes e séries.
          </p>
          <Input
            placeholder="Nome completo"
            name="name"
            type="text"
            required
            isErrored={!!errors.name}
            errorMessage={errors.name?.message}
            register={register}
          />
          <Input
            placeholder="Email"
            name="email"
            type="email"
            required
            isErrored={!!errors.email}
            errorMessage={errors.email?.message}
            register={register}
          />
          <Input.Password
            placeholder="Senha"
            name="password"
            required
            isErrored={!!errors.password}
            errorMessage={errors.password?.message}
            register={register}
          />
          <p className="tw-text-lightPurple">
            Ao clicar em cadastrar, você está aceitando os Termos e Condições e
            a Política de Privacidade da Laon.
          </p>
          <Button content="CADASTRAR" type="submit" />
        </form>
      </section>
    </main>
  );
}
